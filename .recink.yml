--- 
$:
  preprocess:
    '$.terraform.vars.access_key': 'eval'
    '$.terraform.vars.secret_key': 'eval'
    '$.terraform.vars.region': 'eval'
    #'$.cache.options.0': 'eval'
    #'$.cache.options.1.region': 'eval'
    #'$.cache.options.1.accountId': 'eval'
    #'$.cache.options.1.roleName': 'eval'
    '$.comment.providers.github.0.token': 'eval'
  #cache:
  #  driver: 's3'
  #  options:
  #    #- '"s3://travis-metadata/cache/MitocGroup/terraform-demo/" + process.env.TRAVIS_BRANCH'
  #    - 's3://travis-metadata/cache/MitocGroup/terraform-demo/'
  #    -
  #      region: 'process.env.AWS_DEFAULT_REGION'
  #      accountId: 'process.env.AWS_ACCOUNT_ID'
  #      roleName: 'process.env.AWS_ROLE_NAME'
  emit:
    pattern:
      - /.+\.js.*$/i
    ignore:
      - /^(.*\/)?node_modules(\/?$)?/i
  terraform:
    resource: '.resource'
    binary: './bin/terraform'
    use-cache: false
    vars:
      access_key: 'process.env.AWS_ACCESS_KEY_ID'
      secret_key: 'process.env.AWS_SECRET_ACCESS_KEY'
      region: 'process.env.AWS_DEFAULT_REGION'
  comment:
    providers:
      github:
        - token: 'process.env.GITHUB_ACCESS_TOKEN'
  e2e:
    pattern:
      - /.+\.e2e\.js$/i
    screenshot:
      enabled: false
      take-on-fail: true
      path: './tests/screenshots'
    browsers:
      - firefox
#vpc1:
#  root: './vpc1'
#  terraform:
#    version: 0.11.0
#    vars:
#      region: 'us-west-1'
#    run-after:
#      - vpc2
#vpc2:
#  root: './vpc2'
#  terraform:
#    version: 0.11.0
#    vars:
#      region: 'us-west-1'
ec2:
  root: './root'
  terraform:
    apply: true
    destroy: true
    version: 0.11.0
    vars:
      region: 'eu-central-1'
#rds_restore:
#  root: './rds_restore'
#  terraform:
#    version: 0.11.0
#    apply: true
#    vars:
#      region: 'us-west-2'
#tests:
#  root: './tests'
